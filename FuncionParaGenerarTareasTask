function organizarEnGoogleTasks() {
  try {
    // Obtener la hoja activa
    var spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
    var sheet = spreadsheet.getActiveSheet();

    // Obtener los datos del rango utilizado en la hoja de cálculo
    var dataRange = sheet.getRange("E5:R49");
    var dataValues = dataRange.getValues();

    // Crear un objeto para almacenar las tareas
    var tasks = [];

    // Obtener la fila de encabezados para identificar las columnas
    var headerRow = dataValues[0];

    // Recorrer los valores de la matriz, comenzando desde la fila 6
    for (var rowIndex = 1; rowIndex < dataValues.length; rowIndex++) {
      var row = dataValues[rowIndex];

      // Obtener índices de las columnas
      var clienteIndex = headerRow.indexOf("Cliente");
      var fechaCompromisoIndex = headerRow.indexOf("Fecha");
      var descripcionTareaIndex = headerRow.indexOf("Descripción");

      // Verificar si hay un cliente, fecha y descripción en las celdas específicas
      if (clienteIndex !== -1 && fechaCompromisoIndex !== -1 && descripcionTareaIndex !== -1) {
        var cliente = row[clienteIndex];
        var fechaCompromiso = row[fechaCompromisoIndex];
        var descripcionTarea = row[descripcionTareaIndex];

        // Verificar si hay datos en las celdas
        if (cliente && fechaCompromiso && descripcionTarea) {
          // Formatear la fecha como cadena UTC
          var fechaFormateada = formatearFecha(fechaCompromiso);

          // Crear una tarea
          var tarea = {
            title: cliente, // Título de la tarea como nombre del cliente
            notes: descripcionTarea, // Detalles de la tarea como descripción
            due: fechaFormateada // Fecha de compromiso formateada
          };

          // Agregar declaraciones Logger.log para verificar cada combinación
          Logger.log("Cliente en " + headerRow[clienteIndex] + (rowIndex + 5) + ": " + cliente);
          Logger.log("Fecha en " + headerRow[fechaCompromisoIndex] + (rowIndex + 5) + ": " + fechaCompromiso);
          Logger.log("Descripción en " + headerRow[descripcionTareaIndex] + (rowIndex + 5) + ": " + descripcionTarea);

          // Agregar la tarea al array
          tasks.push(tarea);
        }
      }
    }

    // Verificar si hay tareas para agregar
    if (tasks.length > 0) {
      // Obtener la lista de tareas existente
      var taskList = obtenerListaDeTareas();

      // Si no se encuentra, crear la lista
      if (!taskList) {
        taskList = crearListaDeTareas();
      }

      // Obtener títulos de tareas existentes
      var existingTitles = taskList.tasks.map(function (existingTask) {
        return existingTask.title;
      });

      // Filtrar tareas que no existen en la lista
      var nuevasTareas = tasks.filter(function (task) {
        return !existingTitles.includes(task.title);
      });

      // Insertar las nuevas tareas en la lista
      if (nuevasTareas.length > 0) {
        Tasks.Tasks.insertAll(taskList.id, nuevasTareas);
        console.log("Se insertaron nuevas tareas.");
      } else {
        console.log("No hay tareas nuevas para insertar.");
      }
    } else {
      // Registro de depuración para ninguna tarea para agregar
      console.log("No hay tareas para agregar.");
    }
  } catch (error) {
    console.error("Error en la ejecución de organizarEnGoogleTasks:", error);
  }
}
